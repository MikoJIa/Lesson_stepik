# Список это объект, а функция являеться его методом
# метод append()
a = [1, -54, 3, 23, 43, -45, 0]
a.append(100)
print(a)
a.append(True)
print(a)
a.append([1, 2, 3])
print(a)
# метод insert() с помощью этого метода мы можем добавить элемент в любую позицию в списке
a.insert(3, -1000)
print(a)
# метод remove() удаляет элемен по значению
a.remove(True) # [-54, 3, -1000, 23, 43, -45, 0, 100, True, [1, 2, 3]]
print(a) # True удалило еденицу. Булево значение по умолчанию равняется 1 а False нулю.
a.remove(True)
print(a) # [-54, 3, -1000, 23, 43, -45, 0, 100, [1, 2, 3]]
# метод pop() удаляет последний элемент в списке и возвращяет его
a.pop()
print(a) # [-54, 3, -1000, 23, 43, -45, 0, 100]
# И если мы ходи сохранить элеент который удалили необходимо создать переменную Например: end
end = a.pop()
print(end) # 100 мы возвратили последний удалённый элемент из списка
# Ещё мы можем с помощью метода pop() удалять любой элемент списка по индексу
a.pop(3)
print(a) # [-54, 3, -1000, 43, -45, 0] удалили число 23 теперь это число находится в pop()
# метод copy() этот метод позволяет создовать копию списка
c = a.copy()
print(c) # [-54, 3, -1000, 43, -45, 0]
# удаляем содержимое списка, но мы предварительно создали копию.
a.clear()
print(a) # []
print(c) # [-54, 3, -1000, 43, -45, 0]
# Ещё копию списка можно создавать через срезы списка
c = a[:] # так чаще всего используют в практике. Запись короче всего получается
# метод count() позволяет найти число элементов в списке
b = [-54, 3, -1000, 43, -45, 0]
print(b.count(-1000)) # 1 элемент со значением -1000
b.append(-1000) # добавили ещё один элемент -1000
print(b.count(-1000)) # 2 элемента со значение -1000
# метод index() попробем найти индекс второй -1000 которая находится в конце списка
print(b.index(-1000)) # 2
print(b.index(-1000, 3)) # 6 и у нас получился индек шесть
# метод reverse() меняет порядок следования элементов в обратном порядке
print(b) # [-54, 3, -1000, 43, -45, 0, -1000]
b.reverse()
print(b) # [-1000, 0, -45, 43, -1000, 3, -54]
# метод sort() позволяет отсортировать элементы по порядку
b.sort()
print(b) # [-1000, -1000, -54, -45, 0, 3, 43] сортировка происходит по возрастанию или по неубыванию
b.sort(reverse=True) #
print(b) # [43, 3, 0, -45, -54, -1000, -1000] отсортировали список в обратном порядке по убыванию
# а вот функция sorted()  возвращяет новый список по возрастанию
g = sorted(b)
print(g) # [-1000, -1000, -54, -45, 0, 3, 43]
# сортировать можно также и строки например:
lst = ['Москва', 'Тверь', 'Казань', 'Владивосток']
lst.sort()
print(lst) # ['Владивосток', 'Казань', 'Москва', 'Тверь']
